package com.practiceProblems.java;

import java.util.Arrays;

public class DutchNationalFlagProblem {
	
	
	/* We take 3 pointers low, mid, high
	 * 
	 * [0...low-1] -> 0
	 * [low....mid-1] -> 1
	 * [mid ... high] -> unsorted array containing 0,1,2
	 * [high+1....n-1] --> 2
	 */
	

	public static void swap(int[] arr, int a, int b) {
		int temp = arr[a];
		arr[a] = arr[b];
		arr[b] = temp;
	}
	
	public static void main(String[] args) {
		
		int[] arr = {1,0};
		int n = arr.length;
		
		int low = 0;
		int mid = 0;
		int high = n-1;
		
		while(mid<=high) {
			if(arr[mid] == 0) {
				swap(arr,mid,low);
				low++;
				mid++;
			}
			else if(arr[mid] == 2) {
				swap(arr,mid,high);
				high--;
			}
			else {
				mid++;
			}
		
		}
		
		System.out.println(Arrays.toString(arr));
		

	}

}
